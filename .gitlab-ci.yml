stages:
    - pre-build
    - build
    - packages
    - artifacts

variables:
    GIT_SUBMODULE_STRATEGY: recursive
    VERBOSE: '1'
    NANYC_VERSION: '0.3.0'


# build

.template-debug-build-linux: &debug-build-linux
    script:
        - mkdir -p build/bootstrap
        - cd build/bootstrap
        - cmake ../../bootstrap -DCMAKE_BUILD_TYPE=debug
        - cmake --build . --config debug --target all -- -j $(nproc)
        - cmake --build . --config debug --target check
    tags:
        - linux

~~centos-7.3-amd64-debug:
    stage: build
    <<: *debug-build-linux
    image: registry.gitlab.com/nany-lang/nanyc/build/centos:7.3-amd64

~~debian-8-amd64-debug:
    stage: build
    <<: *debug-build-linux
    image: registry.gitlab.com/nany-lang/nanyc/build/debian:8-amd64

~~debian-9-amd64-debug:
    stage: pre-build
    <<: *debug-build-linux
    image: registry.gitlab.com/nany-lang/nanyc/build/debian:9-amd64

~~ubuntu-16.04-amd64-debug:
    stage: build
    <<: *debug-build-linux
    image: registry.gitlab.com/nany-lang/nanyc/build/ubuntu:16.04-amd64

~~ubuntu-17.04-amd64-debug:
    stage: build
    <<: *debug-build-linux
    image: registry.gitlab.com/nany-lang/nanyc/build/ubuntu:17.04-amd64


# packages

.build-pkg-linux-deb: &build-pkg-linux-deb
    stage: packages
    script:
        - ARCH=$(dpkg --print-architecture)
        - . /etc/os-release
        - read ID_VERSION _ <<< "$VERSION"
        - echo "system ${ID}-${ID_VERSION} ($ARCH)"
        - mkdir -p build/bootstrap
        - mkdir -p build/packages
        - cd build/bootstrap
        - cmake ../../bootstrap -DCMAKE_BUILD_TYPE=release
            -DWITH_PACKAGE_DEB=ON
            -DCMAKE_INSTALL_PREFIX=/
            -DCMAKE_INSTALL_BINDIR=usr/bin
            -DCMAKE_INSTALL_LIBDIR=usr/lib
            -DCMAKE_INSTALL_INCLUDEDIR=usr/include
        - cmake --build . --config release --target all -- -j $(nproc)
        - make_package() {
            COM=$1;
            target=../packages/${ID}-${ID_VERSION}/${COM}-${NANYC_VERSION}-${ARCH};
            export DESTDIR=${target};
            cmake -DCOMPONENT="${COM}" -P cmake_install.cmake;
            dpkg -b ${target};
          }
        - make_package libnanyc
        - make_package nanyc
    artifacts:
        paths:
            - build/packages/*/*.deb
        expire_in: 4 hours
    tags:
        - linux

debian-8-amd64:
    <<: *build-pkg-linux-deb
    image: registry.gitlab.com/nany-lang/nanyc/build/debian:8-amd64

debian-9-amd64:
    <<: *build-pkg-linux-deb
    image: registry.gitlab.com/nany-lang/nanyc/build/debian:9-amd64

ubuntu-16.04-amd64:
    <<: *build-pkg-linux-deb
    image: registry.gitlab.com/nany-lang/nanyc/build/ubuntu:16.04-amd64

ubuntu-17.04-amd64:
    <<: *build-pkg-linux-deb
    image: registry.gitlab.com/nany-lang/nanyc/build/ubuntu:17.04-amd64


# artifacts

the gathering master:
    stage: artifacts
    script:
        - echo Gather all artifacts in one spot
    only:
        - master@nany-lang/nanyc
    artifacts:
        paths:
            - build/packages/*/*.deb
        expire_in: 3 months

the gathering:
    stage: artifacts
    script:
        - echo Gather all artifacts in one spot
    except:
        - master@nany-lang/nanyc
    artifacts:
        paths:
            - build/packages/*/*.deb
        expire_in: 1 day
